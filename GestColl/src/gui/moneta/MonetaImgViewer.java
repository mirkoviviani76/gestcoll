/*
 * Modifiche:
 * -
 */

package gui.moneta;

import java.awt.Dimension;
import java.awt.Toolkit;

import javax.swing.ImageIcon;

/**
 *
 * 
 */
public class MonetaImgViewer extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form MonetaImgViewer
	 * 
	 * @param parent
	 * @param modal
	 */
	public MonetaImgViewer(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jImg = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jImg.setAutoscrolls(true);
		jScrollPane1.setViewportView(jImg);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING,
				javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING,
				javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jImg;
	private javax.swing.JScrollPane jScrollPane1;

	// End of variables declaration//GEN-END:variables

	/**
	 * 
	 * @param filename
	 */
	public void setImg(String filename) {
		ImageIcon img_D = new ImageIcon(filename);
		this.jImg.setIcon(img_D);
		// ottiene la massima dimensione dello schermo
		Dimension s = Toolkit.getDefaultToolkit().getScreenSize();
		int maxH = s.height - 20;
		int maxW = s.width - 20;
		int width = (img_D.getIconWidth() >= maxW ? maxW : img_D.getIconWidth());
		int height = (img_D.getIconHeight() >= maxH ? maxH : img_D
				.getIconHeight());
		this.setSize(width + 30, height + 30);
	}
}
